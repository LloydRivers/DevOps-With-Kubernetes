<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Image Viewer</title>
  </head>
  <body>
    <h1>Image Viewer</h1>
    <p>Timestamp: <%= timestamp %></p>
    <p>Request Count: <%= requestCount %></p>
    <p>Hash: <%= hash %></p>
    <img src="data:image/jpeg;base64,<%= imageData %>" alt="Random Image" />

    <h2>Todos</h2>

    <ul id="todoList"></ul>

    <form id="todoForm">
      <input
        type="text"
        id="todoInput"
        name="todo"
        maxlength="140"
        placeholder="Enter your todo here"
        required
      />
      <button type="submit">Send</button>
    </form>
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        console.log("Document loaded, executing JavaScript.");
        document
          .getElementById("todoForm")
          .addEventListener("submit", async (event) => {
            event.preventDefault();
            const input = document.getElementById("todoInput");
            const value = input.value.trim();

            if (isValidTodoValue(value)) {
              await postTodoToBackend(value);
              addTodoToList(value);
              input.value = "";
            } else {
              alert("Todo must be between 1 and 140 characters.");
            }
          });

        fetchTodos();
      });

      // chrome browswer 8081 -> 80 (lb) -> ingress looks for /todos -> backend-svc -> pod

      async function fetchTodos() {
        try {
          const response = await fetch("http://localhost:8081/todos");
          console.log("response", response);
          if (!response.ok) {
            throw new Error("Failed to fetch todos");
          }
          const todos = await response.json();
          todos.forEach((todo) => addTodoToList(todo));
        } catch (error) {
          console.error("Error fetching todos:", error);
        }
      }

      async function postTodoToBackend(todo) {
        console.log("The todo you are sending is ", todo);
        try {
          const response = await fetch("http://localhost:8081/todos", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ todo: todo }),
          });
          console.log("response", response);
          if (!response.ok) {
            throw new Error("Failed to post todo");
          }
          const data = await response.json();
          return data;
        } catch (error) {
          console.error("Error posting todo:", error);
        }
      }

      function createTodoItem(value) {
        const li = document.createElement("li");
        li.textContent = value;
        return li;
      }

      function addTodoToList(value) {
        const list = document.getElementById("todoList");
        const todoItem = createTodoItem(value);
        list.appendChild(todoItem);
      }

      function isValidTodoValue(value) {
        return value.length > 0 && value.length <= 140;
      }
    </script>
  </body>
</html>
